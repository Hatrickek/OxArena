name: Build

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      
env:
  # Customize the CMake build type here (Release, Debug, Distribution)
  BUILD_TYPE: Release

jobs:
  linux-clang:
    runs-on: ubuntu-latest
    name: Linux Clang
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        
    steps:
    #- name: Set up Clang
    #  uses: egor-tensin/setup-clang@v1
    #  with:
    #    version: latest
    #    platform: x64
    #- uses: lukka/get-cmake@latest
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.211.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    - name: Install GTK
      run: sudo apt install build-essential libgtk-3-dev
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=clang++
    - name: Build
      run: cmake --build ./build --config ${{env.BUILD_TYPE}}
    - name: "Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          build/OxArena/Release/OxArena

  msvc_cl:
    runs-on: windows-latest
    name: Visual Studio CL
    strategy:
        fail-fast: false
        matrix:
            build_type: [Release]

    steps:
    - uses: lukka/get-cmake@latest
    - name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.211.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1.12.1
      with:
        arch: ${{ matrix.arch }}
        vsversion: 2022
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3
    - name: Configure CMake
      run: cmake -S . -B ${{github.workspace}}/build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: msbuild build\Oxylus.sln /property:Configuration=${{env.BUILD_TYPE}}
    - name: "Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          build/OxArena/Release/OxArena.exe

#   mac_clang:
#     runs-on: macos-latest
#     name: Mac Clang
#     strategy:
#         fail-fast: false
#         matrix:
#             build_type: [Release]
#   
#     steps:
#     - name: Setup Vulkan SDK
#       uses: sjcobb2022/setup-vulkan-sdk@c2612401009bbce8002630e838bf91cc67f8b3c3
#       with:
#         vulkan-query-version: 1.3.246.1
#         vulkan-components: Vulkan-Headers, Vulkan-Loader, shaderc
#         vulkan-use-cache: true
#     - name: Checkout Code
#       uses: actions/checkout@v3
#       with:
#         submodules: recursive
#     - name: Configure CMake
#       run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
#     - name: Build
#       run: cmake --build ./build --config ${{env.BUILD_TYPE}}
#     - name: "Release"
#       uses: "marvinpinto/action-automatic-releases@latest"
#       with:
#         repo_token: "${{ secrets.GITHUB_TOKEN }}"
#         automatic_release_tag: "latest"
#         prerelease: true
#         title: "Development Build"
#         files: |
#           build/Oxylus/Release/Oxylus
#          build/OxylusEditor/Release/OxylusEditor
